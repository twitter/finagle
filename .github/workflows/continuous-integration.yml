name: continuous integration

env:
  JAVA_OPTS: "-Dsbt.log.noformat=true"
  TRAVIS: "true" # pretend we're TravisCI
  SBT_VERSION: 1.7.1
  BUILD_VERSION: "v1" # bump this if builds are failing due to a bad cache

defaults:
  run:
    shell: bash
on:
  push:
    branches:
      - develop
      - release
  pull_request:
  tags:
    - '*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        scala: [2.12.12, 2.13.6]
        java: ['1.8', '1.11']
        project: ['finagle-base-http', 'finagle-benchmark', 'finagle-benchmark-thrift', 'finagle-core', 'finagle-example', 'finagle-exp', 'finagle-grpc-context', 'finagle-http', 'finagle-http2','finagle-init','finagle-integration','finagle-memcached','finagle-mux','finagle-mysql','finagle-netty4','finagle-netty4-http','finagle-opencensus-tracing','finagle-partitioning','finagle-redis','finagle-scribe','finagle-serversets','finagle-stats','finagle-stats-core','finagle-thrift','finagle-thriftmux','finagle-toggle','finagle-tunable','finagle-zipkin-core','finagle-zipkin-scribe']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: echo java version
        run: java -Xmx32m -version
      - name: echo javac version
        run: javac -J-Xmx32m -version
      - name: cache build dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-build-deps
        with:
          path: |
            ~/.dodo
            ~/.ivy2/cache
            ~/.ivy2/local/com.twitter
            ~/.sbt
          key: ${{ runner.os }}-build-${{ env.BUILD_VERSION }}-${{ env.cache-name }}-${{ env.SBT_VERSION }}-${{ matrix.scala }}-${{ matrix.java }}
      - name: update cache
        run: |
          if [ -f ~/.ivy2/cache ]; then
            find ~/.ivy2/cache  -name "ivydata-*.properties" -delete
          fi
          if [ -f ~/.sbt ]; then
            find ~/.sbt         -name "*.lock"               -delete
          fi
      - name: build dependencies
        uses: twitter/dodo-build@v3
        with:
          branch: develop
          project: finagle
          no-test: true
          publish-m2: true
          verbose: true
      - name: test
        run: ${{ format('./sbt ++{0} clean "{1}/test"', matrix.scala, matrix.project) }}
  build-with-netty-snapshot:
    strategy:
      fail-fast: false
      matrix:
        scala: [2.12.8, 2.13.1]
        java: ['1.8', '1.11']
        project: ['finagle-base-http','finagle-core','finagle-http','finagle-http2','finagle-integration','finagle-mux','finagle-mysql','finagle-netty4','finagle-netty4-http','finagle-thriftmux']
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: echo java version
        run: java -Xmx32m -version
      - name: echo javac version
        run: javac -J-Xmx32m -version
      - name: cache build dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-build-deps
        with:
          path: |
            ~/.dodo
            ~/.ivy2/cache
            ~/.ivy2/local/com.twitter
            ~/.sbt
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.SBT_VERSION }}-${{ matrix.scala }}-${{ matrix.java }}
      - name: update cache
        run: |
          if [ -f ~/.ivy2/cache ]; then
            find ~/.ivy2/cache  -name "ivydata-*.properties" -delete
          fi
          if [ -f ~/.sbt ]; then
            find ~/.sbt         -name "*.lock"               -delete
          fi
      - name: build dependencies
        uses: twitter/dodo-build@v3
        with:
          branch: develop
          project: finagle
          no-test: true
          publish-m2: true
          verbose: true
      - name: set up netty snapshot
        run: source ./netty-snapshot-env.sh
      - name: test
        run: ${{ format('./sbt ++{0} clean "{1}/test"', matrix.scala, matrix.project) }}
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      - name: Create release on GitHub
        uses: softprops/action-gh-release@v1
      - name: Create Finagle HTTP package
        run: ./sbt ++2.12.12 clean "finagle-http/package"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          role-duration-seconds: 900
          aws-region: us-east-1
      - name: Upload to S3
        run: |
          FILE=$(find finagle-http/target/scala-2.12 -name 'finagle-http_2.12-*.jar')
          NAME=$FILE | rev | cut -d/ -f1 | rev

          aws s3 cp "${FILE}" "s3://${{ secrets.S3_BUCKET }}/github/finagle/${NAME}" > /dev/null
          aws s3api put-object-acl --bucket ${{ secrets.S3_BUCKET }} --acl public-read --key "github/finagle/${NAME}" > /dev/null

          CHECKSUM=$(sha256sum "${FILE}" | awk '{print $1}')
          echo "${NAME}: https://{{ secrets.CDN_HOSTNAME }}}/github/finagle/${NAME} ${CHECKSUM}"
