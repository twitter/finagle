package com.twitter.finagle.postgres.codec

import com.twitter.finagle.postgres.messages.PgRequest

/*
 * An error generated by Postgres.
 */
case class ServerError(
  message : String,
  request: Option[PgRequest],
  severity: Option[String],
  sqlState: Option[String] = None,
  detail: Option[String] = None,
  hint: Option[String] = None,
  position: Option[String] = None
) extends Exception(message) {
  override def toString: String = sqlState match {
    case Some(state) => s"com.twitter.finagle.postgres.codec.ServerError: SQLSTATE $state: $message"
    case None => super.toString
  }
}

/*
 * An error caused on the client side (e.g., a badly-formed query).
 */
case class ClientError(message : String) extends Exception(message)

/*
 * An error arising from attempting to access a NULL field
 */
case object NullValue extends Exception("Value is NULL")

object Errors {
  def client(message : String) = ClientError(message)
  def server(message : String,
             request: Option[PgRequest] = None,
             severity: Option[String] = None,
             sqlState: Option[String] = None,
             detail: Option[String] = None,
             hint: Option[String] = None,
             position: Option[String] = None) =
    ServerError(message, request, severity, sqlState, detail, hint, position)
}